name: Setup Environment Action
description: 'Setup the environment for any Open Logic jobs'

inputs:
  os:
    description: 'The runner OS'
    required: true

runs:
  using: 'composite'
  steps:
    #Python Setup (Cached)
    - name: Setup python
      uses: actions/setup-python@v5
      with: 
        python-version: '3.10'
        cache: 'pip'
    - name: Install Python Requiremetns
      shell: bash
      run: pip install -r ./.github/workflows/requirements.txt
    #Setup APT Get packages (Uncached - complex and little benefit in time)
    - name: Install APT packages
      shell: bash
      run: |
        sudo apt-get update
        xargs -a .github/workflows/apt-dependencies.txt sudo apt-get install -y
    #Setup GHDL (Uncached - no benefit in time)
    - name: Download and extract GHDL
      shell: bash
      run: |
        mkdir -p ~/ghdl
        wget -q https://github.com/ghdl/ghdl/releases/download/v3.0.0/ghdl-gha-ubuntu-20.04-mcode.tgz
        tar zxvf ghdl-gha-ubuntu-20.04-mcode.tgz -C ~/ghdl > /dev/null 2>&1
    - name: Add GHDL to PATH
      shell: bash
      run: echo "$HOME/ghdl/bin" >> $GITHUB_PATH
    #Setup Modelsim
    - name: Install ModelSim dependencies
      shell: bash
      run: |
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install lib32z1 lib32stdc++6 libexpat1:i386 libc6:i386 libsm6:i386 libncurses5:i386 libx11-6:i386 zlib1g:i386 libxext6:i386 libxft2:i386
    # Save time on subsequent runs by caching the install of ModelSim.
    # Download is ~1.5GB and combined with the installation process it takes over 3 minutes.
    - name: mkdir
      shell: bash
      run: mkdir -p ~/modelsim
    - name: cache-modelsim
      id: cache-modelsim
      uses: actions/cache@v3
      with:
        path: ~/modelsim
        key: ${{ runner.os }}-modelsim
    - name: Install ModelSim if not cached
      if: steps.cache-modelsim.outputs.cache-hit != 'true'
      shell: bash
      run: |
        wget -q https://storage.googleapis.com/open-logic-badges/files/questa.tar.gz
        tar zxvf questa.tar.gz -C ~/modelsim > /dev/null 2>&1
    - name: Add ModelSim to PATH
      shell: bash
      run: echo "~/modelsim/questa_fse/bin" >> $GITHUB_PATH
    # Set up virtual MAC
    - name: Setup MAC
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install iproute2
        sudo ip link add link eth0 macvlan0 type macvlan mode bridge
        sudo ip link set dev macvlan0 address 8c:8c:aa:cd:2e:9f
        sudo ip link set macvlan0 up
        sudo ip addr add 192.168.1.100/24 dev macvlan0
        sudo ip link set macvlan0 up
    - name: Show MAC
      shell: bash
      run: ip addr show macvlan0
    # Configure Modelsim License
    - name: Configure ModelSim License
      shell: bash
      run: |
        echo "LM_LICENSE_FILE=$HOME/modelsim/license.dat" >> $GITHUB_ENV
        echo "VUNIT_MODELSIM_INI=$HOME/modelsim/questa_fse/modelsim.ini" >> $GITHUB_ENV
        sudo chmod -R 777 ~/modelsim




